{"remainingRequest":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/babel-loader/lib/index.js!/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/src/views/Photo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/src/views/Photo.vue","mtime":1554877015195},{"path":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Date$now from \"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/JohnPaul/Desktop/Files/School/Schoolwork/Winter 2019/CS 260/lab-5-fourty-too/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'Photo',\n  data: function data() {\n    return {\n      addedComment: ''\n    };\n  },\n  props: {\n    id: String\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$store.dispatch(\"getUser\");\n\n            case 2:\n              _context.next = 4;\n              return this.$store.dispatch(\"getPhoto\", this.$route.query.id);\n\n            case 4:\n              _context.next = 6;\n              return this.$store.dispatch(\"getComments\", this.$route.query.id);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  computed: {\n    photo: function photo() {\n      return this.$store.state.photos;\n    },\n    user: function user() {\n      return this.$store.state.user;\n    },\n    comments: function comments() {\n      return this.$store.state.comments;\n    }\n  },\n  methods: {\n    formatDate: function formatDate(date) {\n      if (moment(date).diff(_Date$now(), 'days') < 15) return moment(date).fromNow();else return moment(date).format('d MMMM YYYY');\n    },\n    addComment: function () {\n      var _addComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.$store.dispatch(\"addComment\", {\n                  name: this.user.name,\n                  photoID: this.$store.state.photos,\n                  comment: this.addedComment\n                });\n\n              case 3:\n                this.error = _context2.sent;\n                _context2.next = 6;\n                return this.$store.dispatch(\"getComments\", this.$route.query.id);\n\n              case 6:\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n\n      function addComment() {\n        return _addComment.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n  }\n};",{"version":3,"sources":["Photo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AADA,GAPA;AAUA,EAAA,OAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAWA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,CAXA;;AAAA;AAAA;AAAA,qBAYA,KAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAZA;;AAAA;AAAA;AAAA,qBAaA,KAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,QAPA,sBAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA;AACA;AATA,GAfA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,WAAA,EAAA,MAAA,IAAA,EAAA,EACA,OAAA,MAAA,CAAA,IAAA,CAAA,CAAA,OAAA,EAAA,CADA,KAGA,OAAA,MAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AACA,KANA;AAOA,IAAA,UAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASA,KAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,kBAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IADA;AAEA,kBAAA,OAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAFA;AAGA,kBAAA,OAAA,EAAA,KAAA;AAHA,iBAAA,CATA;;AAAA;AASA,qBAAA,KATA;AAAA;AAAA,uBAcA,KAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CAdA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBA,gBAAA,OAAA,CAAA,GAAA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1BA,CAAA","sourcesContent":["<template>\n<div>\n  <div v-if=\"photo\">\n    <div class=\"image\">\n      <img :src=\"photo.path\" />\n      <p class=\"photoTitle\">{{photo.title}}</p>\n      <p class=\"photoDate\">\n      <span v-if=\"photo.user.name\">{{photo.user.name}}, </span>\n        {{formatDate(photo.created)}}\n      </p>\n      <p>{{photo.description}}</p>\n      <br/>\n      <br/>\n      <div v-if=\"user\">\n        <form @submit.prevent=\"addComment\" class=\"pure-form pure-form-aligned\">\n          <div class=\"pure-control-group\">\n            <p>Comment on This Photo</p>\n            <textarea v-model=\"addedComment\" style=\"width: 55%\"></textarea>\n            <br />\n          </div>\n          <div class=\"pure-controls\">\n            <button type=\"submit\" class=\"pure-button pure-button-primary\">Comment</button>\n          </div>\n        </form>\n      </div>\n      <h3>Comments</h3>\n      <div v-if=\"comments\">\n        <div v-for=\"comment in comments\" v-bind:key=\"comment.created\">\n          <hr>\n          <p>{{comment.comment}}</p>\n          <p><i>-- {{comment.name}}, Posted {{formatDate(comment.created)}}</i></p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport moment from 'moment';\n\nexport default {\n  name: 'Photo',\n  data() {\n    return {\n      addedComment: '',\n    }\n  },\n  props: {\n    id: String\n  },\n  async created() {\n    await this.$store.dispatch(\"getUser\");\n    await this.$store.dispatch(\"getPhoto\", this.$route.query.id);\n    await this.$store.dispatch(\"getComments\", this.$route.query.id);\n  },\n  computed: {\n    photo() {\n      return this.$store.state.photos;\n    },\n    user() {\n      return this.$store.state.user;\n    },\n    comments() {\n      return this.$store.state.comments;\n    }\n  },\n  methods: {\n    formatDate(date) {\n      if (moment(date).diff(Date.now(), 'days') < 15)\n        return moment(date).fromNow();\n      else\n        return moment(date).format('d MMMM YYYY');\n    },\n    async addComment() {\n      try {\n        this.error = await this.$store.dispatch(\"addComment\", {\n          name: this.user.name,\n          photoID: this.$store.state.photos,\n          comment: this.addedComment\n        });\n        await this.$store.dispatch(\"getComments\", this.$route.query.id);\n\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.photoTitle {\n  margin: 0px;\n  font-size: 1.2em;\n}\n\n.photoDate {\n  margin: 0px;\n  font-size: 0.9em;\n  font-weight: normal;\n}\n\np {\n  margin: 0px;\n}\n\n.image {\n  margin: 0 0 1.5em;\n  display: inline-block;\n  width: 100%;\n}\n\n.image img {\n  max-width: 600px;\n  max-height: 600px;\n  image-orientation: from-image;\n}\n</style>\n"],"sourceRoot":"src/views"}]}